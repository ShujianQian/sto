[warehouse_value]
@splits = 1, 1, 1, 1, 1, 1, 1, 0
w_name = var_string<10>
w_street_1 = var_string<20>
w_street_2 = var_string<20>
w_city = var_string<20>
w_state = fix_string<2>
w_zip = fix_string<9>
# in 1/10000
w_tax = int64_t
# in 1/100
w_ytd = uint64_t

[district_value]
@splits = 1, 1, 1, 1, 1, 1, 1, 0
d_name = var_string<10>
d_street_1 = var_string<20>
d_street_2 = var_string<20>
d_city = var_string<20>
d_state = fix_string<2>
d_zip = fix_string<9>
d_tax = int64_t
d_ytd = int64_t
# we use the separate oid generator for better semantics in transactions
#d_next_o_id = uint64_t

[customer_idx_value]
c_ids = std::list<uint64_t>

[customer_value]
@splits = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0
c_first = var_string<16>
c_middle = fix_string<2>
c_last = var_string<16>
c_street_1 = var_string<20>
c_street_2 = var_string<20>
c_city = var_string<20>
c_state = fix_string<2>
c_zip = fix_string<9>
c_phone = fix_string<16>
c_since = uint32_t
c_credit = fix_string<2>
c_credit_lim = int64_t
c_discount = int64_t
c_balance = int64_t
c_ytd_payment = int64_t
c_payment_cnt = uint16_t
c_delivery_cnt = uint16_t
c_data = fix_string<500>

[history_value]
h_c_id = uint64_t
h_c_d_id = uint64_t
h_c_w_id = uint64_t
h_d_id = uint64_t
h_w_id = uint64_t
h_date = uint32_t
h_amount = int64_t
h_data = var_string<24>

[order_value]
@splits = 0, 0, 0, 0, 1
o_c_id = uint64_t
o_entry_d = uint32_t
o_ol_cnt = uint32_t
o_all_local = uint32_t
o_carrier_id = uint64_t

[orderline_value]
@splits = 1, 1, 1, 1, 1, 0
ol_i_id = uint64_t
ol_supply_w_id = uint64_t
ol_quantity = uint32_t
ol_amount = int32_t
ol_dist_info = fix_string<24>
ol_delivery_d = uint32_t

[item_value]
i_im_id = uint64_t
i_price = uint32_t
i_name = var_string<24>
i_data = var_string<50>

[stock_value]
@splits = 1, 1, 0, 0, 0, 0
s_dists[10] = fix_string<24>
s_data = var_string<50>
s_quantity = int32_t
s_ytd = uint32_t
s_order_cnt = uint32_t
s_remote_cnt = uint32_t

